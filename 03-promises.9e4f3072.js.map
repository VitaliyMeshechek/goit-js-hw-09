{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAQ,KACRC,EAAO,KACPC,EAAS,KAEb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAErBA,E,IAWN,SAASS,EAAUC,G,IAAEX,EAAFW,EAAEX,SAAUY,EAAZD,EAAYF,MAC3BI,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANJ,EAAM,M,CAG1E,SAASK,EAAQN,G,IAAEX,EAAFW,EAAEX,SAAUkB,EAAZP,EAAYF,MAC3BI,EAAAnB,GAASoB,OAAOK,QAAQ,sBAAqCH,OAAfhB,EAAS,QAAYgB,OAANE,EAAM,M,EAZ1D,CACXE,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAWzB,SAAwBC,GACpBA,EAAIC,iBAER7B,EAAQ8B,OAAOF,EAAIG,OAAOlB,MAAMmB,OAChC/B,EAAO6B,OAAOF,EAAIG,OAAOE,KAAKD,OAC9B9B,EAAS4B,OAAOF,EAAIG,OAAOG,OAAOF,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKjC,EAAQiC,GAAK,EAClChC,EAAcgC,EAAGnC,GAAOoC,KAAKtB,GAAWuB,MAAMhB,GAC9CrB,GAASC,EAGXqC,QAAQC,IAAIvC,GACZsC,QAAQC,IAAItC,GACZqC,QAAQC,IAAIrC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delay = null;\nlet step = null;\nlet amount = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });// Fulfill\n        } else {\n          reject({ position, delay });// Reject\n        }\n      },delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onPromiseValue);\n\n\n  function onSuccess({ position, delay }) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    };\n\n  function onError({ position, delay }) {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  };\n\n  function onPromiseValue(evt) {\n      evt.preventDefault();\n\n  delay = Number(evt.target.delay.value);\n  step = Number(evt.target.step.value);\n  amount = Number(evt.target.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n  createPromise(i, delay).then(onSuccess).catch(onError);\n  delay += step;\n};\n\nconsole.log(delay);\nconsole.log(step);\nconsole.log(amount);\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","$ce04d3a99e08e73b$var$onSuccess","param","delay2","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onError","delay3","failure","form","document","querySelector","addEventListener","evt","preventDefault","Number","target","value","step","amount","i","then","catch","console","log"],"version":3,"file":"03-promises.9e4f3072.js.map"}